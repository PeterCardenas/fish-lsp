Thu Jan  5 03:07:46 AM CST 2023

[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onDocumentSymbols
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/config.fish",
      "languageId": "fish",
      "version": 1,
      "text": "\n# ┌──────────┐\n# │┏━╸╻┏━┓╻ ╻│\n# │┣╸ ┃┗━┓┣━┫│\n# │╹  ╹┗━┛╹ ╹│\n# └──────────┘\n\nset -gx OS_NAME (get-os-name) # check for mac or linux\n\n# ┌──────────┐\n# │ defaults │\n# └──────────┘\nset -gx TERM \"xterm-256color\"\nset -gx SCRIPTS \"$HOME/.config/fish/scripts\"\nset -gx EXE \"$HOME/.config/fish/scripts\"\n#set -gx TERMINAL 'terminator'\n#set -gx TERMINAL 'gnome-terminal'\nset -gx TERMINAL 'tilix'\nset -gx COLOR_TERM \"truecolor\"\nset -gx EDITOR 'nvim'\nset -gx VISUAL 'nvim'\nset -gx NVIM_RANGER_FILE \"$HOME/.config/nvim/nvim_ranger_file\"\nset -gx NODE_MODULES_PATH '/usr/local/lib/node_modules/'\n\n# ┌────────┐\n# │ prompt │\n# └────────┘\noh-my-posh init fish | source\nsource ~/.local/share/icons-in-terminal/icons.fish\n\nset -gx prompt_size_file \"$FISH_PATH/fish_prompt_is_long\"\nset_first_prompt_size;\n\n# ┌─────────────┐\n# │┏━┓╻  ╻┏━┓┏━┓│\n# │┣━┫┃  ┃┣━┫┗━┓│\n# │╹ ╹┗━╸╹╹ ╹┗━┛│\n# └─────────────┘\nalias lt=\"ls --tree\"\nalias lst=\"ls --tree\"\nalias sl=\"sl -l -e -F\"\nalias cs=\"sl -l -e -F\"\nalias cmatrix=\"unimatrix -l nnnnkkgGcAas -n -s 97 -f --color=yellow\"\nalias cbon=\"cbonsai --multiplier=3 --life=45 --live\"\nalias vimdiff=\"nvim -d\"\nalias vdiff=\"nvim -d\"\nalias vd=\"nvim -d\"\n#alias neovide=\"neovide --multigrid\"\nalias gitqc='git add . && git commit -m \"added minor changes\" && git push ' \nalias gcan='git commit --amend --no-edit'\nalias nvim_norc='nvim -U norc'\nalias nvim_search='nvim -c \":FZFAll\"'\nalias prompt_fix='commandline -f repaint'\n#alias cat='batcat'\nalias lg='lazygit'\nalias f='floaterm'\nalias fmui=\"~/fmui/fmui\"\n\n# ┌─────────────────────┐\n# │┏━╸╻ ╻┏━┓┏━┓┏━┓╺┳╸┏━┓│\n# │┣╸ ┏╋┛┣━┛┃ ┃┣┳┛ ┃ ┗━┓│\n# │┗━╸╹ ╹╹  ┗━┛╹┗╸ ╹ ┗━┛│\n# └─────────────────────┘\n\n# ┌───────┐\n# │ paths │\n# └───────┘\nset -x PATH /home/ndonfris/.local/bin /usr/local/bin /usr/bin /usr/sbin /home/ndonfris/.cargo/env /usr/share/dasht/bin $PATH\nset -gx GOPATH $HOME/go\nset -gx FISH_PATH \"$HOME/.config/fish\"\nset -gx NVIM_PATH \"$HOME/.config/nvim\"\nset -gx DIR_MUSIC $HOME/Music\nset -gx XDG_CONFIG_HOME /home/ndonfris/.config\nset -gx ff $HOME/.config/fish/functions/\n\n\n# ┌───────┐\n# │ theme │\n# └───────┘\nset -gx LS_COLORS (vivid generate ls_theme)\nset -gx EXA_COLORS (vivid generate exa_theme)\nset fish_cursor_unknown block\nset fish_pager_color_description blue\nset fish_color_search_match blue\nset -gx BAT_PAGER \"less -RF\"\nset -gx BAT_THEME \"base16\"\nset -gx fish_pager_color_prefix '#815bf5' --bold\nset -gx fish_pager_color_completion '#685abc'\nset -gx fish_pager_color_secondary_prefix '#685abc'\nset -gx fish_pager_color_secondary_completion '#685abc'\nset -gx fish_pager_color_secondary_descrition '#685abc'\nset -gx fish_pager_color_selected_prefix white\nset -gx fish_pager_color_selected_completion white \nset -gx fish_pager_color_selected_description white\nset -gx fish_pager_color_selected_background --background='#685abc'\nset -gx DASHT_DOCSETS_DIR \"$HOME/.local/share/Zeal/Zeal/docsets\"\n\n\n# ┌──────┐\n# │ ENV  │\n# └──────┘\nload_env_vars $NVIM_PATH/.openai_key\n\n\n# ┌──────┐\n# │ TMUX │\n# └──────┘\nset -gx pref_tmux_session_names 'expo' 'fish' 'nvim' 'work' 'nvim-lua' '445' 'leetcode' 'temp' 'working' 'main' 'master' 'backend' 'frontend' 'project' 'git' 'tmp' 'default' 'other' 'source' 'hw' 'new'\nset -gx tmux_conf $HOME/.tmux.conf\nset -gx tmux_dir $HOME/.config/tmux/\n\n\n# ┌─────┐\n# │ FZF │\n# └─────┘\n# alias's for fzf so that default formatting is always availible\nset -gx _FZF_COLORS \"--color='fg:#7ba2f3,bg:-1,hl:#5f87af,fg+:#15a9bf,bg+:#414868,hl+:#5fd7ff,info:#c0caf5,prompt:#685abc,pointer:#af5fff,marker:#685abc,spinner:#af5fff,header:#797fda,border:#5fd7ff,gutter:-1'\"\nset -gx _FZF_PREVIEW \"--preview='_fzf_preview {}'\"\nset -gx _FZF_WINDOW \"--ansi --height 75% --min-height 30  --margin 5% --padding 1% --border=rounded --reverse\"\nset -gx _FZF_TMUX_WINDOW \"--ansi --reverse\"\nset -gx _FZF_NAV_KEYS \"--bind=ctrl-u:page-up,ctrl-d:page-down,ctrl-h:backward-kill-word,tab:replace-query,down:preview-page-down,up:preview-page-up,change:top\"\nset -gx _FZF_CMD_KEYS \"--bind='ctrl-g:reload(_fzf_subcommand_git_status),ctrl-r:reload(history),ctrl-f:reload(find_child_files),alt-d:reload(_fzf_search_directory),alt-g:reload(_fzf_search_git_log),ctrl-o:reload(list_parents),ctrl-l:execute(fd . --type f),?:reload(fzf_subcommand_man)'\"\nset -gx _FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_WINDOW $_FZF_PREVIEW $_FZF_NAV_KEYS $_FZF_CMD_KEYS\"\n\n# fzf aliases\nset -gx FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS\"\nset -gx FZF_DEFAULT_COMMAND \"all_finder\";\n#set -U FZF_LEGACY_KEYBINDINGS 1\nalias fzf_mini=\"fzf $_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS $_FZF_PREVIEW --preview-window='down,65%,rounded'\"\nalias fzf_min=\"/usr/bin/fzf $_FZF_COLORS $_FZF_WINDOW $_FZF_NAV_KEYS\"\nalias fzf_mine=\"fzf $_FZF_DEFAULT_OPTS\"\nalias fzf_gt='__fzf_open_mine'\n\n# ┌──────┐\n# │ Man  │\n# └──────┘\nif test \"$MANPATH\" = \"\";\n    set -gx MANPATH (manpath)\nend\nset -gx MANPATH /usr/share/fish/man /usr/share/dasht/man $MANPATH\nset -g man_blink -o magenta\nset -g man_bold -o blue \nset -g man_standout -b blue --bold white\nset -g man_underline -u white\n\n# ┌──────┐\n# │ JAVA │\n# └──────┘\nset -gx JAVA_HOME /usr/lib/jvm/zulu-18-amd64\nset -gx PATH_TO_FX ~/Downloads/javafx-sdk-17.0.1/lib\n\n\n# ┌──────────────────────────┐\n# │ ranger fzf marks plugins │\n# └──────────────────────────┘\nset -gx _fzf_fzm_defaults \"--ansi --margin 5% --padding 1% --border=rounded --reverse --height 95% --min-height 30 --cycle +m\"\nset -gx _fzf_fzm_preview_window \"--with-nth -1 --preview='exa --icons /home/ndonfris/{3}' --preview-window=right:25%\"\nset -gx FZF_FZM_OPTS \"$_fzf_fzm_defaults $_fzf_fzm_preview_window $_FZF_COLORS $_FZF_NAV_KEYS\"\nset -gx FZF_MARKS_CMD \"/usr/bin/fzf $FZF_FZM_OPTS\"\n\n# ┌──────────────────────┐\n# │╻┏ ┏━╸╻ ╻┏┓ ╻┏┓╻╺┳┓┏━┓│\n# │┣┻┓┣╸ ┗┳┛┣┻┓┃┃┗┫ ┃┃┗━┓│\n# │╹ ╹┗━╸ ╹ ┗━┛╹╹ ╹╺┻┛┗━┛│\n# └──────────────────────┘\n\n# fish function for user key bindings -> u can goto the files in the function calls\nfunction fish_user_key_bindings\n    #bind \" \" expand-abbr or self-insert\n    bind \\t 'expand_abbr_or_tab_complete'\n    bind \\cA 'beginning-of-buffer'\n    bind \\cE 'accept-autosuggestion-or-end-of-buffer'\n    bind \\cH 'backward-kill-word' \n    bind \\cW 'suppress-autosuggestion-and-backward-kill-bigword'\n    bind \\e\\[A 'page-up-or-history-backward' \n    bind \\e\\[B 'page-down-or-history-forward'\n    bind \\cd 'exit-or-smart-clear'\n    bind \\cc 'toggle-comment-or-cancel-command'\n    bind \\cj 'down-or-nextd-or-forward-word'\n    bind \\ck 'up-or-prevd-or-backward-word'\n    bind \\cr 'ranger; commandline -f repaint'\n    #bind \\ct 'commandline -f repaint'\n    bind -k nul 'fzf-or-toggle-auto-complete;commandline -f repaint' \n    bind \\cv 'fish_clipboard_paste'\n    bind \\cS 'toggle_prompt; commandline -f repaint'\n    bind \\cG 'lazygit; commandline -f repaint'\n    bind \\cB 'bt-fzf-grep; commandline -f repaint'\n    bind \\e\\cN 'open_term_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cT 'open_terminal_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cR '$EXE/open_term_run_ranger.sh $PWD'\n    bind \\cT 'open_terminal_and_copy_dir_history'\n    bind \\cOw 'open_location 1'\n    bind \\cOp 'open_location 1'\n    bind \\cOn 'open_location 2'\n    bind \\cOf 'open_location 3'\n    bind \\cOe 'open_location 4'\n    bind \\cO1 'open_location 1'\n    bind \\cO2 'open_location 2'\n    bind \\cO3 'open_location 3'\n    bind \\cO4 'open_location 4'\n    bind \\eow 'gt; commandline -f repaint'\n    bind \\eop 'gt repos; commandline -f repaint'\n    bind \\eon 'gt n; commandline -f repaint'\n    bind \\eof 'gt f; commandline -f repaint'\n    bind \\eoc 'gt config; commandline -f repaint'\n    bind \\eor 'gt r; commandline -f repaint'\n    bind ~~~ 'tmux -2; commandline -f repaint;'\n    bind \\cY 'fzf-history-or-copy-to-clipboard'\n    bind \\ey 'select_from_last'\n    bind \\ez 'fzf-search; commandline -f repaint'\n    bind \\c_ 'backward-jump' # ctrl + /\n    bind \\cF 'fzf-recent-dirs; commandline -f repaint'\n    bind \\ef 'forward-jump'\n    bind \\e\\; 'repeat-jump'\n    bind \\e\\, 'repeat-jump-reverse'\n    bind \\eo 'insert-line-under'\n    #bind \\c\\; 'repeat-jump'\n    #bind \\cT 'fzf-search;commandline -f repaint'\n    bind \\eu 'undo' # DNE on ergodox layout\n    bind \\er 'redo'\n    bind \\em '__fish_man_page'\n    bind \\eg 'commandline -r \"gt \"; commandline -f repaint; commandline -f complete';\nend\n\n# ┌────────────┐\n# │┏━┓┏┓ ┏┓ ┏━┓│\n# │┣━┫┣┻┓┣┻┓┣┳┛│\n# │╹ ╹┗━┛┗━┛╹┗╸│\n# └────────────┘\nset -g test_var true # set test_var equal to something then run tvif abbr\n\n# ┌─────────────────┐\n# │ system commands │\n# └─────────────────┘\nset -a -g rmf 'rm -f'\nset -a -g rmr 'rm -rf'\nset -a -g mkdir 'mkdir -p'\nabbr -a -g apt 'sudo apt'\nabbr -a -g aptg 'sudo apt-get'\nabbr -a -g apti 'sudo apt install'\nabbr -a -g apts 'apt search'\nabbr -a -g apty 'sudo apt install -y'\n\nabbr -a -g tvif 'if test $test_var; echi 1; else; echi 0; end;'\n\n# ┌────────┐\n# │ github │\n# └────────┘\nabbr -a -g readme 'nvim README.md'\nabbr -a -g clog 'nvim CHANGELOG.md'\nabbr -a -g gwa 'git worktree add'\nabbr -a -g rdme 'nvim README.md'\nabbr -a -g ignr 'nvim .gitignore'\nabbr -a -g gti 'nvim .gitignore'\n\n# ┌────────┐\n# │ cutsom │\n# └────────┘\nabbr -a -g nvimff \"nvim -O $HOME/.config/fish/{functions,completions}/\"\nabbr -a -g gacc \"git@github.com:ndonfris/SOMEREPO.git\"\nabbr -a -g fish_path \"$HOME/.config/fish\"\nabbr -a -g nvim_path \"$HOME/.config/nvim\"\nabbr -a -g fz \"fzf-\"\nabbr -a -g fzs \"bt-fzf-switch\"\nabbr -a -g fzt \"bt-fzf-grep\"\nabbr -a -g fzff \"ls $HOME/.config/fish/functions | grep \\\"fzf\\\"\"\nabbr -a -g tm \"tmux -2\"\nabbr -a -g sf \"source_fish -q;\"\nabbr -a -g ech \"echi\"\nabbr -a -g echy \"echi y;\"\nabbr -a -g echn \"echi n;\"\nabbr -a -g echf \"echi f;\"\nabbr -a -g echm \"echi m;\"\nabbr -a -g ya \"echi y\"\nabbr -a -g no \"echi n\"\nabbr -a -g fff \"fzf-search\"\nabbr -a -g lsg '(ls . | grep \"*\")'\nabbr -a -g grepf '(ls . | grep \"*\")'\nabbr -a -g fdn 'set -l var \"\"; nvim (lso -t | fd \"$var\" | grep \"$var\" | head -n 5)'\nabbr -a -g fd_n 'nvim (lso -t | grep \"*\")'\nabbr -a -g fds 'set -l var \"\"; lso -t | fd \"$var\" | grep \"$var\" | head -n 5'\nabbr -a -g fd_s 'lso -t | grep \"*\"'\nabbr -a -g ls_start 'lso -t | grep -e \"^\\(word\\)\\.*\"'\nabbr -a -g ls_end 'lso -t | grep  -e \"\\(word\\)\\$\"'\nabbr -a -g ls_not 'lso -t | grep --invert-match -e \"\\(word\\)\"'\n\nabbr -a -g ls_recent \"lso -t | head -n 10\"\n\nabbr -a -g no_stderr '$history[1] 2>/dev/null'\nabbr -a -g no_stdout '$history[1] 1>/dev/null'\n\nabbr -a -g h10 'head -n 10'\nabbr -a -g t10 'tail -n 10'\n\nabbr -a -g ls_full 'realpath (lso -t | grep --exclude-dir \"**/node_modules\" -e \"\\(SEARCH\\)\")'\n#abbr -a -g ff 'nvim (fd --type f)'\nabbr -a -g gtree 'git worktree'\nabbr -a -g gw 'git worktree'\nabbr -a -g gc-b 'git clone --bare'\n\nabbr -a -g cpff 'cp -r $HOME/.config/fish/functions/ '\n\nabbr -a -g nn 'nvim $HOME/.config/nvim/'\nabbr -a -g nl 'nvim lua/user/'\nabbr -a -g nlu 'nvim lua/user/'\nabbr -a -g nlc 'nvim lua/completion/'\nabbr -a -g np 'nvim plug-config/'\nabbr -a -g npp 'nvim vim-plug/plugins.vim'\nabbr -a -g na 'nvim autoload/plugged/'\n\n# ┌───────────┐\n# │ tmux abbr │\n# └───────────┘\nabbr -a -g tns \"tmux-new-session\"\nabbr -a -g tmuxs \"fzf-tmux-search\"\n\nabbr -a -g in_neovim_statement 'if set -q $NVIM; echi y;else;echi n;end'\n\n# ┌─────────────────────────┐\n# │ multiline abbreviations │\n# └─────────────────────────┘\n#abbr -a -g qwhile 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qread 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qif 'set -l var (echo \"\" ); \\\n#if test \"$var\" = \"_\";\\\n#echi yes;\\\n#else; \\\n#echi no;\\\n#end;'\n\nabbr -a -g fft 'firefox_tab'\n\nabbr -a -g gr 'gt r'\nabbr -a -g rr 'gt r'\n\nabbr -a -g lss 'ls -l --sort=size'\nabbr -a -g conf 'cd ~/.config/'\nabbr -a -g npmw 'npm run watch'\nabbr -a -g npmr 'npm run'\nabbr -a -g home 'cd $HOME'\n\nset -gx fish_tmux_autostart false\nset -gx fish_tmux_autostart_once true\nset -gx fish_tmux_autoconnect false\n\nset -gx open_in_working_dir_file $HOME/.open_in_working_dir_file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/config.fish
opened document: file:///home/ndonfris/.config/fish/config.fish
analyzed document: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function make-scripts-executable\n\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish
opened document: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $s
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (variable_expansion (variable_name)))))
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $sc
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (variable_expansion (variable_name)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scr
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (variable_expansion (variable_name)))))
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scri
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (variable_expansion (variable_name)))))
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scrip
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (variable_expansion (variable_name)))))
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $script
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (variable_expansion (variable_name)))))
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scripts
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (variable_expansion (variable_name)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scripts/
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scripts/*
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word) (glob)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scripts/*.
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word) (glob) (word)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish :     chmod +x $scripts/*.*
root: (program (function_definition name: (word) (command name: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word) (glob) (word) (glob)))))
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
closed uri: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function make-scripts-executable\n    chmod +x $scripts/*.*\n\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish
opened document: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish : function make-scripts-executable --
root: (program (function_definition name: (word) option: (concatenation (word) (single_quote_string)) (command name: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word) (glob) (word) (glob)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/config.fish
closed uri: /home/ndonfris/.config/fish/config.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
closed uri: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function make-scripts-executable --description 'makes scripts executable'\n    chmod +x $scripts/*.*\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish
opened document: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/make-scripts-executable.fish
closed uri: /home/ndonfris/.config/fish/functions/make-scripts-executable.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/config.fish",
      "languageId": "fish",
      "version": 1,
      "text": "\n# ┌──────────┐\n# │┏━╸╻┏━┓╻ ╻│\n# │┣╸ ┃┗━┓┣━┫│\n# │╹  ╹┗━┛╹ ╹│\n# └──────────┘\n\nset -gx OS_NAME (get-os-name) # check for mac or linux\n\n# ┌──────────┐\n# │ defaults │\n# └──────────┘\nset -gx TERM \"xterm-256color\"\nset -gx SCRIPTS \"$HOME/.config/fish/scripts\"\nset -gx EXE \"$HOME/.config/fish/scripts\"\n#set -gx TERMINAL 'terminator'\n#set -gx TERMINAL 'gnome-terminal'\nset -gx TERMINAL 'tilix'\nset -gx COLOR_TERM \"truecolor\"\nset -gx EDITOR 'nvim'\nset -gx VISUAL 'nvim'\nset -gx NVIM_RANGER_FILE \"$HOME/.config/nvim/nvim_ranger_file\"\nset -gx NODE_MODULES_PATH '/usr/local/lib/node_modules/'\n\n## short_hands for locations\nset -gx funcs \"$HOME/.config/fish/functions\"\nset -gx nlua \"$HOME/.config/nvim/lua\"\nset -gx nconf \"$HOME/.config/nvim\"\nset -gx comps \"$HOME/.config/fish/completions\"\nset -gx scripts \"$HOME/.config/fish/scripts\"\n\n# ┌────────┐\n# │ prompt │\n# └────────┘\noh-my-posh init fish | source\nsource ~/.local/share/icons-in-terminal/icons.fish\n\nset -gx prompt_size_file \"$FISH_PATH/fish_prompt_is_long\"\nset_first_prompt_size;\n\n# ┌─────────────┐\n# │┏━┓╻  ╻┏━┓┏━┓│\n# │┣━┫┃  ┃┣━┫┗━┓│\n# │╹ ╹┗━╸╹╹ ╹┗━┛│\n# └─────────────┘\nalias lt=\"ls --tree\"\nalias lst=\"ls --tree\"\nalias sl=\"sl -l -e -F\"\nalias cs=\"sl -l -e -F\"\nalias cmatrix=\"unimatrix -l nnnnkkgGcAas -n -s 97 -f --color=yellow\"\nalias cbon=\"cbonsai --multiplier=3 --life=45 --live\"\nalias vimdiff=\"nvim -d\"\nalias vdiff=\"nvim -d\"\nalias vd=\"nvim -d\"\n#alias neovide=\"neovide --multigrid\"\nalias gitqc='git add . && git commit -m \"added minor changes\" && git push ' \nalias gcan='git commit --amend --no-edit'\nalias nvim_norc='nvim -U norc'\nalias nvim_search='nvim -c \":FZFAll\"'\nalias prompt_fix='commandline -f repaint'\n#alias cat='batcat'\nalias lg='lazygit'\nalias f='floaterm'\nalias fmui=\"~/fmui/fmui\"\n\n# ┌─────────────────────┐\n# │┏━╸╻ ╻┏━┓┏━┓┏━┓╺┳╸┏━┓│\n# │┣╸ ┏╋┛┣━┛┃ ┃┣┳┛ ┃ ┗━┓│\n# │┗━╸╹ ╹╹  ┗━┛╹┗╸ ╹ ┗━┛│\n# └─────────────────────┘\n\n# ┌───────┐\n# │ paths │\n# └───────┘\nset -x PATH /home/ndonfris/.local/bin /usr/local/bin /usr/bin /usr/sbin /home/ndonfris/.cargo/env /usr/share/dasht/bin $PATH\nset -gx GOPATH $HOME/go\nset -gx FISH_PATH \"$HOME/.config/fish\"\nset -gx NVIM_PATH \"$HOME/.config/nvim\"\nset -gx DIR_MUSIC $HOME/Music\nset -gx XDG_CONFIG_HOME /home/ndonfris/.config\nset -gx ff $HOME/.config/fish/functions/\n\n\n# ┌───────┐\n# │ theme │\n# └───────┘\nset -gx LS_COLORS (vivid generate ls_theme)\nset -gx EXA_COLORS (vivid generate exa_theme)\nset fish_cursor_unknown block\nset fish_pager_color_description blue\nset fish_color_search_match blue\nset -gx BAT_PAGER \"less -RF\"\nset -gx BAT_THEME \"base16\"\nset -gx fish_pager_color_prefix '#815bf5' --bold\nset -gx fish_pager_color_completion '#685abc'\nset -gx fish_pager_color_secondary_prefix '#685abc'\nset -gx fish_pager_color_secondary_completion '#685abc'\nset -gx fish_pager_color_secondary_descrition '#685abc'\nset -gx fish_pager_color_selected_prefix white\nset -gx fish_pager_color_selected_completion white \nset -gx fish_pager_color_selected_description white\nset -gx fish_pager_color_selected_background --background='#685abc'\nset -gx DASHT_DOCSETS_DIR \"$HOME/.local/share/Zeal/Zeal/docsets\"\n\n\n# ┌──────┐\n# │ ENV  │\n# └──────┘\nload_env_vars $NVIM_PATH/.openai_key\n\n\n# ┌──────┐\n# │ TMUX │\n# └──────┘\nset -gx pref_tmux_session_names 'expo' 'fish' 'nvim' 'work' 'nvim-lua' '445' 'leetcode' 'temp' 'working' 'main' 'master' 'backend' 'frontend' 'project' 'git' 'tmp' 'default' 'other' 'source' 'hw' 'new'\nset -gx tmux_conf $HOME/.tmux.conf\nset -gx tmux_dir $HOME/.config/tmux/\n\n\n# ┌─────┐\n# │ FZF │\n# └─────┘\n# alias's for fzf so that default formatting is always availible\nset -gx _FZF_COLORS \"--color='fg:#7ba2f3,bg:-1,hl:#5f87af,fg+:#15a9bf,bg+:#414868,hl+:#5fd7ff,info:#c0caf5,prompt:#685abc,pointer:#af5fff,marker:#685abc,spinner:#af5fff,header:#797fda,border:#5fd7ff,gutter:-1'\"\nset -gx _FZF_PREVIEW \"--preview='_fzf_preview {}'\"\nset -gx _FZF_WINDOW \"--ansi --height 75% --min-height 30  --margin 5% --padding 1% --border=rounded --reverse\"\nset -gx _FZF_TMUX_WINDOW \"--ansi --reverse\"\nset -gx _FZF_NAV_KEYS \"--bind=ctrl-u:page-up,ctrl-d:page-down,ctrl-h:backward-kill-word,tab:replace-query,down:preview-page-down,up:preview-page-up,change:top\"\nset -gx _FZF_CMD_KEYS \"--bind='ctrl-g:reload(_fzf_subcommand_git_status),ctrl-r:reload(history),ctrl-f:reload(find_child_files),alt-d:reload(_fzf_search_directory),alt-g:reload(_fzf_search_git_log),ctrl-o:reload(list_parents),ctrl-l:execute(fd . --type f),?:reload(fzf_subcommand_man)'\"\nset -gx _FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_WINDOW $_FZF_PREVIEW $_FZF_NAV_KEYS $_FZF_CMD_KEYS\"\n\n# fzf aliases\nset -gx FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS\"\nset -gx FZF_DEFAULT_COMMAND \"all_finder\";\n#set -U FZF_LEGACY_KEYBINDINGS 1\nalias fzf_mini=\"fzf $_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS $_FZF_PREVIEW --preview-window='down,65%,rounded'\"\nalias fzf_min=\"/usr/bin/fzf $_FZF_COLORS $_FZF_WINDOW $_FZF_NAV_KEYS\"\nalias fzf_mine=\"fzf $_FZF_DEFAULT_OPTS\"\nalias fzf_gt='__fzf_open_mine'\n\n# ┌──────┐\n# │ Man  │\n# └──────┘\nif test \"$MANPATH\" = \"\";\n    set -gx MANPATH (manpath)\nend\nset -gx MANPATH /usr/share/fish/man /usr/share/dasht/man $MANPATH\nset -g man_blink -o magenta\nset -g man_bold -o blue \nset -g man_standout -b blue --bold white\nset -g man_underline -u white\n\n# ┌──────┐\n# │ JAVA │\n# └──────┘\nset -gx JAVA_HOME /usr/lib/jvm/zulu-18-amd64\nset -gx PATH_TO_FX ~/Downloads/javafx-sdk-17.0.1/lib\n\n\n# ┌──────────────────────────┐\n# │ ranger fzf marks plugins │\n# └──────────────────────────┘\nset -gx _fzf_fzm_defaults \"--ansi --margin 5% --padding 1% --border=rounded --reverse --height 95% --min-height 30 --cycle +m\"\nset -gx _fzf_fzm_preview_window \"--with-nth -1 --preview='exa --icons /home/ndonfris/{3}' --preview-window=right:25%\"\nset -gx FZF_FZM_OPTS \"$_fzf_fzm_defaults $_fzf_fzm_preview_window $_FZF_COLORS $_FZF_NAV_KEYS\"\nset -gx FZF_MARKS_CMD \"/usr/bin/fzf $FZF_FZM_OPTS\"\n\n# ┌──────────────────────┐\n# │╻┏ ┏━╸╻ ╻┏┓ ╻┏┓╻╺┳┓┏━┓│\n# │┣┻┓┣╸ ┗┳┛┣┻┓┃┃┗┫ ┃┃┗━┓│\n# │╹ ╹┗━╸ ╹ ┗━┛╹╹ ╹╺┻┛┗━┛│\n# └──────────────────────┘\n\n# fish function for user key bindings -> u can goto the files in the function calls\nfunction fish_user_key_bindings\n    #bind \" \" expand-abbr or self-insert\n    bind \\t 'expand_abbr_or_tab_complete'\n    bind \\cA 'beginning-of-buffer'\n    bind \\cE 'accept-autosuggestion-or-end-of-buffer'\n    bind \\cH 'backward-kill-word' \n    bind \\cW 'suppress-autosuggestion-and-backward-kill-bigword'\n    bind \\e\\[A 'page-up-or-history-backward' \n    bind \\e\\[B 'page-down-or-history-forward'\n    bind \\cd 'exit-or-smart-clear'\n    bind \\cc 'toggle-comment-or-cancel-command'\n    bind \\cj 'down-or-nextd-or-forward-word'\n    bind \\ck 'up-or-prevd-or-backward-word'\n    bind \\cr 'ranger; commandline -f repaint'\n    #bind \\ct 'commandline -f repaint'\n    bind -k nul 'fzf-or-toggle-auto-complete;commandline -f repaint' \n    bind \\cv 'fish_clipboard_paste'\n    bind \\cS 'toggle_prompt; commandline -f repaint'\n    bind \\cG 'lazygit; commandline -f repaint'\n    bind \\cB 'bt-fzf-grep; commandline -f repaint'\n    bind \\e\\cN 'open_term_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cT 'open_terminal_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cR '$EXE/open_term_run_ranger.sh $PWD'\n    bind \\cT 'open_terminal_and_copy_dir_history'\n    bind \\cOw 'open_location 1'\n    bind \\cOp 'open_location 1'\n    bind \\cOn 'open_location 2'\n    bind \\cOf 'open_location 3'\n    bind \\cOe 'open_location 4'\n    bind \\cO1 'open_location 1'\n    bind \\cO2 'open_location 2'\n    bind \\cO3 'open_location 3'\n    bind \\cO4 'open_location 4'\n    bind \\eow 'gt; commandline -f repaint'\n    bind \\eop 'gt repos; commandline -f repaint'\n    bind \\eon 'gt n; commandline -f repaint'\n    bind \\eof 'gt f; commandline -f repaint'\n    bind \\eoc 'gt config; commandline -f repaint'\n    bind \\eor 'gt r; commandline -f repaint'\n    bind ~~~ 'tmux -2; commandline -f repaint;'\n    bind \\cY 'fzf-history-or-copy-to-clipboard'\n    bind \\ey 'select_from_last'\n    bind \\ez 'fzf-search; commandline -f repaint'\n    bind \\c_ 'backward-jump' # ctrl + /\n    bind \\cF 'fzf-recent-dirs; commandline -f repaint'\n    bind \\ef 'forward-jump'\n    bind \\e\\; 'repeat-jump'\n    bind \\e\\, 'repeat-jump-reverse'\n    bind \\eo 'insert-line-under'\n    #bind \\c\\; 'repeat-jump'\n    #bind \\cT 'fzf-search;commandline -f repaint'\n    bind \\eu 'undo' # DNE on ergodox layout\n    bind \\er 'redo'\n    bind \\em '__fish_man_page'\n    bind \\eg 'commandline -r \"gt \"; commandline -f repaint; commandline -f complete';\nend\n\n# ┌────────────┐\n# │┏━┓┏┓ ┏┓ ┏━┓│\n# │┣━┫┣┻┓┣┻┓┣┳┛│\n# │╹ ╹┗━┛┗━┛╹┗╸│\n# └────────────┘\nset -g test_var true # set test_var equal to something then run tvif abbr\n\n# ┌─────────────────┐\n# │ system commands │\n# └─────────────────┘\nset -a -g rmf 'rm -f'\nset -a -g rmr 'rm -rf'\nset -a -g mkdir 'mkdir -p'\nabbr -a -g apt 'sudo apt'\nabbr -a -g aptg 'sudo apt-get'\nabbr -a -g apti 'sudo apt install'\nabbr -a -g apts 'apt search'\nabbr -a -g apty 'sudo apt install -y'\n\nabbr -a -g tvif 'if test $test_var; echi 1; else; echi 0; end;'\n\n# ┌────────┐\n# │ github │\n# └────────┘\nabbr -a -g readme 'nvim README.md'\nabbr -a -g clog 'nvim CHANGELOG.md'\nabbr -a -g gwa 'git worktree add'\nabbr -a -g rdme 'nvim README.md'\nabbr -a -g ignr 'nvim .gitignore'\nabbr -a -g gti 'nvim .gitignore'\n\n# ┌────────┐\n# │ cutsom │\n# └────────┘\nabbr -a -g nvimff \"nvim -O $HOME/.config/fish/{functions,completions}/\"\nabbr -a -g gacc \"git@github.com:ndonfris/SOMEREPO.git\"\nabbr -a -g fish_path \"$HOME/.config/fish\"\nabbr -a -g nvim_path \"$HOME/.config/nvim\"\nabbr -a -g fz \"fzf-\"\nabbr -a -g fzs \"bt-fzf-switch\"\nabbr -a -g fzt \"bt-fzf-grep\"\nabbr -a -g fzff \"ls $HOME/.config/fish/functions | grep \\\"fzf\\\"\"\nabbr -a -g tm \"tmux -2\"\nabbr -a -g sf \"source_fish -q;\"\nabbr -a -g ech \"echi\"\nabbr -a -g echy \"echi y;\"\nabbr -a -g echn \"echi n;\"\nabbr -a -g echf \"echi f;\"\nabbr -a -g echm \"echi m;\"\nabbr -a -g ya \"echi y\"\nabbr -a -g no \"echi n\"\nabbr -a -g fff \"fzf-search\"\nabbr -a -g lsg '(ls . | grep \"*\")'\nabbr -a -g grepf '(ls . | grep \"*\")'\nabbr -a -g fdn 'set -l var \"\"; nvim (lso -t | fd \"$var\" | grep \"$var\" | head -n 5)'\nabbr -a -g fd_n 'nvim (lso -t | grep \"*\")'\nabbr -a -g fds 'set -l var \"\"; lso -t | fd \"$var\" | grep \"$var\" | head -n 5'\nabbr -a -g fd_s 'lso -t | grep \"*\"'\nabbr -a -g ls_start 'lso -t | grep -e \"^\\(word\\)\\.*\"'\nabbr -a -g ls_end 'lso -t | grep  -e \"\\(word\\)\\$\"'\nabbr -a -g ls_not 'lso -t | grep --invert-match -e \"\\(word\\)\"'\n\nabbr -a -g ls_recent \"lso -t | head -n 10\"\n\nabbr -a -g no_stderr '$history[1] 2>/dev/null'\nabbr -a -g no_stdout '$history[1] 1>/dev/null'\n\nabbr -a -g h10 'head -n 10'\nabbr -a -g t10 'tail -n 10'\n\nabbr -a -g ls_full 'realpath (lso -t | grep --exclude-dir \"**/node_modules\" -e \"\\(SEARCH\\)\")'\n#abbr -a -g ff 'nvim (fd --type f)'\nabbr -a -g gtree 'git worktree'\nabbr -a -g gw 'git worktree'\nabbr -a -g gc-b 'git clone --bare'\n\nabbr -a -g cpff 'cp -r $HOME/.config/fish/functions/ '\n\nabbr -a -g nn 'nvim $HOME/.config/nvim/'\nabbr -a -g nl 'nvim lua/user/'\nabbr -a -g nlu 'nvim lua/user/'\nabbr -a -g nlc 'nvim lua/completion/'\nabbr -a -g np 'nvim plug-config/'\nabbr -a -g npp 'nvim vim-plug/plugins.vim'\nabbr -a -g na 'nvim autoload/plugged/'\n\n# ┌───────────┐\n# │ tmux abbr │\n# └───────────┘\nabbr -a -g tns \"tmux-new-session\"\nabbr -a -g tmuxs \"fzf-tmux-search\"\n\nabbr -a -g in_neovim_statement 'if set -q $NVIM; echi y;else;echi n;end'\n\n# ┌─────────────────────────┐\n# │ multiline abbreviations │\n# └─────────────────────────┘\n#abbr -a -g qwhile 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qread 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qif 'set -l var (echo \"\" ); \\\n#if test \"$var\" = \"_\";\\\n#echi yes;\\\n#else; \\\n#echi no;\\\n#end;'\n\nabbr -a -g fft 'firefox_tab'\n\nabbr -a -g gr 'gt r'\nabbr -a -g rr 'gt r'\n\nabbr -a -g lss 'ls -l --sort=size'\nabbr -a -g conf 'cd ~/.config/'\nabbr -a -g npmw 'npm run watch'\nabbr -a -g npmr 'npm run'\nabbr -a -g home 'cd $HOME'\n\nset -gx fish_tmux_autostart false\nset -gx fish_tmux_autostart_once true\nset -gx fish_tmux_autoconnect false\n\nset -gx open_in_working_dir_file $HOME/.open_in_working_dir_file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/config.fish
opened document: file:///home/ndonfris/.config/fish/config.fish
analyzed document: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/config.fish : set -gx themes "$HOME/.config/nvim/themes/
root: (program (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word))))) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (comment) (pipe (command name: (word) argument: (word) argument: (word)) (command name: (word))) (command name: (word) argument: (concatenation (home_dir_expansion) (word))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word)) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (comment) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (comment) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (variable_expansion (variable_name))) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word) argument: (word) argument: (word))))) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word) argument: (word) argument: (word))))) (command name: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (comment) (command name: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)))) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (comment) (command name: (word) argument: (concatenation (word) (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name))))) (command name: (word) argument: (concatenation (word) (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name))))) (command name: (word) argument: (concatenation (word) (double_quote_string (variable_expansion (variable_name))))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (comment) (comment) (comment) (if_statement condition: (test_command argument: (double_quote_string (variable_expansion (variable_name))) argument: (test_option) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word)))))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (variable_expansion (variable_name))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (home_dir_expansion) (word))) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (comment) (comment) (comment) (comment) (function_definition name: (word) (comment) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (comment) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (home_dir_expansion) (home_dir_expansion) (home_dir_expansion)) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (comment) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (comment) (comment) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (comment) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string))) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word)) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence))) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/codi.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function codi\n\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/codi.fish
opened document: file:///home/ndonfris/.config/fish/functions/codi.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/codi.fish :     $scripts/
root: (program (function_definition name: (word) (command name: (concatenation (variable_expansion (variable_name)) (word)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/codi.fish : function codi --argument
root: (program (function_definition name: (word) option: (word) (command name: (concatenation (variable_expansion (variable_name)) (word)) argument: (variable_expansion (variable_name)))))
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
closed uri: /home/ndonfris/.config/fish/functions/codi.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/codi.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function codi --argument-names filetype filename\n    $scripts/codi.sh $argv\n\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/codi.fish
opened document: file:///home/ndonfris/.config/fish/functions/codi.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/functions/codi.fish :     $scripts/codi.sh $fi
root: (program (function_definition name: (word) option: (word) option: (word) option: (word) (command name: (concatenation (variable_expansion (variable_name)) (word)) argument: (variable_expansion (variable_name)))))
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/config.fish
closed uri: /home/ndonfris/.config/fish/config.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
closed uri: /home/ndonfris/.config/fish/functions/codi.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/config.fish",
      "languageId": "fish",
      "version": 2,
      "text": "\n# ┌──────────┐\n# │┏━╸╻┏━┓╻ ╻│\n# │┣╸ ┃┗━┓┣━┫│\n# │╹  ╹┗━┛╹ ╹│\n# └──────────┘\n\nset -gx OS_NAME (get-os-name) # check for mac or linux\n\n# ┌──────────┐\n# │ defaults │\n# └──────────┘\nset -gx TERM \"xterm-256color\"\nset -gx SCRIPTS \"$HOME/.config/fish/scripts\"\nset -gx EXE \"$HOME/.config/fish/scripts\"\n#set -gx TERMINAL 'terminator'\n#set -gx TERMINAL 'gnome-terminal'\nset -gx TERMINAL 'tilix'\nset -gx COLOR_TERM \"truecolor\"\nset -gx EDITOR 'nvim'\nset -gx VISUAL 'nvim'\nset -gx NVIM_RANGER_FILE \"$HOME/.config/nvim/nvim_ranger_file\"\nset -gx NODE_MODULES_PATH '/usr/local/lib/node_modules/'\n\n## short_hands for locations\nset -gx funcs \"$HOME/.config/fish/functions\"\nset -gx nlua \"$HOME/.config/nvim/lua\"\nset -gx nconf \"$HOME/.config/nvim\"\nset -gx comps \"$HOME/.config/fish/completions\"\nset -gx scripts \"$HOME/.config/fish/scripts\"\nset -gx theme \"$HOME/.config/nvim/themes/onetheme.vim\"\n\n\n# ┌────────┐\n# │ prompt │\n# └────────┘\noh-my-posh init fish | source\nsource ~/.local/share/icons-in-terminal/icons.fish\n\nset -gx prompt_size_file \"$FISH_PATH/fish_prompt_is_long\"\nset_first_prompt_size;\n\n# ┌─────────────┐\n# │┏━┓╻  ╻┏━┓┏━┓│\n# │┣━┫┃  ┃┣━┫┗━┓│\n# │╹ ╹┗━╸╹╹ ╹┗━┛│\n# └─────────────┘\nalias lt=\"ls --tree\"\nalias lst=\"ls --tree\"\nalias sl=\"sl -l -e -F\"\nalias cs=\"sl -l -e -F\"\nalias cmatrix=\"unimatrix -l nnnnkkgGcAas -n -s 97 -f --color=yellow\"\nalias cbon=\"cbonsai --multiplier=3 --life=45 --live\"\nalias vimdiff=\"nvim -d\"\nalias vdiff=\"nvim -d\"\nalias vd=\"nvim -d\"\n#alias neovide=\"neovide --multigrid\"\nalias gitqc='git add . && git commit -m \"added minor changes\" && git push ' \nalias gcan='git commit --amend --no-edit'\nalias nvim_norc='nvim -U norc'\nalias nvim_search='nvim -c \":FZFAll\"'\nalias prompt_fix='commandline -f repaint'\n#alias cat='batcat'\nalias lg='lazygit'\nalias f='floaterm'\nalias fmui=\"~/fmui/fmui\"\n\n# ┌─────────────────────┐\n# │┏━╸╻ ╻┏━┓┏━┓┏━┓╺┳╸┏━┓│\n# │┣╸ ┏╋┛┣━┛┃ ┃┣┳┛ ┃ ┗━┓│\n# │┗━╸╹ ╹╹  ┗━┛╹┗╸ ╹ ┗━┛│\n# └─────────────────────┘\n\n# ┌───────┐\n# │ paths │\n# └───────┘\nset -x PATH /home/ndonfris/.local/bin /usr/local/bin /usr/bin /usr/sbin /home/ndonfris/.cargo/env /usr/share/dasht/bin $PATH\nset -gx GOPATH $HOME/go\nset -gx FISH_PATH \"$HOME/.config/fish\"\nset -gx NVIM_PATH \"$HOME/.config/nvim\"\nset -gx DIR_MUSIC $HOME/Music\nset -gx XDG_CONFIG_HOME /home/ndonfris/.config\nset -gx ff $HOME/.config/fish/functions/\n\n\n# ┌───────┐\n# │ theme │\n# └───────┘\nset -gx LS_COLORS (vivid generate ls_theme)\nset -gx EXA_COLORS (vivid generate exa_theme)\nset fish_cursor_unknown block\nset fish_pager_color_description blue\nset fish_color_search_match blue\nset -gx BAT_PAGER \"less -RF\"\nset -gx BAT_THEME \"base16\"\nset -gx fish_pager_color_prefix '#815bf5' --bold\nset -gx fish_pager_color_completion '#685abc'\nset -gx fish_pager_color_secondary_prefix '#685abc'\nset -gx fish_pager_color_secondary_completion '#685abc'\nset -gx fish_pager_color_secondary_descrition '#685abc'\nset -gx fish_pager_color_selected_prefix white\nset -gx fish_pager_color_selected_completion white \nset -gx fish_pager_color_selected_description white\nset -gx fish_pager_color_selected_background --background='#685abc'\nset -gx DASHT_DOCSETS_DIR \"$HOME/.local/share/Zeal/Zeal/docsets\"\n\n\n# ┌──────┐\n# │ ENV  │\n# └──────┘\nload_env_vars $NVIM_PATH/.openai_key\n\n\n# ┌──────┐\n# │ TMUX │\n# └──────┘\nset -gx pref_tmux_session_names 'expo' 'fish' 'nvim' 'work' 'nvim-lua' '445' 'leetcode' 'temp' 'working' 'main' 'master' 'backend' 'frontend' 'project' 'git' 'tmp' 'default' 'other' 'source' 'hw' 'new'\nset -gx tmux_conf $HOME/.tmux.conf\nset -gx tmux_dir $HOME/.config/tmux/\n\n\n# ┌─────┐\n# │ FZF │\n# └─────┘\n# alias's for fzf so that default formatting is always availible\nset -gx _FZF_COLORS \"--color='fg:#7ba2f3,bg:-1,hl:#5f87af,fg+:#15a9bf,bg+:#414868,hl+:#5fd7ff,info:#c0caf5,prompt:#685abc,pointer:#af5fff,marker:#685abc,spinner:#af5fff,header:#797fda,border:#5fd7ff,gutter:-1'\"\nset -gx _FZF_PREVIEW \"--preview='_fzf_preview {}'\"\nset -gx _FZF_WINDOW \"--ansi --height 75% --min-height 30  --margin 5% --padding 1% --border=rounded --reverse\"\nset -gx _FZF_TMUX_WINDOW \"--ansi --reverse\"\nset -gx _FZF_NAV_KEYS \"--bind=ctrl-u:page-up,ctrl-d:page-down,ctrl-h:backward-kill-word,tab:replace-query,down:preview-page-down,up:preview-page-up,change:top\"\nset -gx _FZF_CMD_KEYS \"--bind='ctrl-g:reload(_fzf_subcommand_git_status),ctrl-r:reload(history),ctrl-f:reload(find_child_files),alt-d:reload(_fzf_search_directory),alt-g:reload(_fzf_search_git_log),ctrl-o:reload(list_parents),ctrl-l:execute(fd . --type f),?:reload(fzf_subcommand_man)'\"\nset -gx _FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_WINDOW $_FZF_PREVIEW $_FZF_NAV_KEYS $_FZF_CMD_KEYS\"\n\n# fzf aliases\nset -gx FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS\"\nset -gx FZF_DEFAULT_COMMAND \"all_finder\";\n#set -U FZF_LEGACY_KEYBINDINGS 1\nalias fzf_mini=\"fzf $_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS $_FZF_PREVIEW --preview-window='down,65%,rounded'\"\nalias fzf_min=\"/usr/bin/fzf $_FZF_COLORS $_FZF_WINDOW $_FZF_NAV_KEYS\"\nalias fzf_mine=\"fzf $_FZF_DEFAULT_OPTS\"\nalias fzf_gt='__fzf_open_mine'\n\n# ┌──────┐\n# │ Man  │\n# └──────┘\nif test \"$MANPATH\" = \"\";\n    set -gx MANPATH (manpath)\nend\nset -gx MANPATH /usr/share/fish/man /usr/share/dasht/man $MANPATH\nset -g man_blink -o magenta\nset -g man_bold -o blue \nset -g man_standout -b blue --bold white\nset -g man_underline -u white\n\n# ┌──────┐\n# │ JAVA │\n# └──────┘\nset -gx JAVA_HOME /usr/lib/jvm/zulu-18-amd64\nset -gx PATH_TO_FX ~/Downloads/javafx-sdk-17.0.1/lib\n\n\n# ┌──────────────────────────┐\n# │ ranger fzf marks plugins │\n# └──────────────────────────┘\nset -gx _fzf_fzm_defaults \"--ansi --margin 5% --padding 1% --border=rounded --reverse --height 95% --min-height 30 --cycle +m\"\nset -gx _fzf_fzm_preview_window \"--with-nth -1 --preview='exa --icons /home/ndonfris/{3}' --preview-window=right:25%\"\nset -gx FZF_FZM_OPTS \"$_fzf_fzm_defaults $_fzf_fzm_preview_window $_FZF_COLORS $_FZF_NAV_KEYS\"\nset -gx FZF_MARKS_CMD \"/usr/bin/fzf $FZF_FZM_OPTS\"\n\n# ┌──────────────────────┐\n# │╻┏ ┏━╸╻ ╻┏┓ ╻┏┓╻╺┳┓┏━┓│\n# │┣┻┓┣╸ ┗┳┛┣┻┓┃┃┗┫ ┃┃┗━┓│\n# │╹ ╹┗━╸ ╹ ┗━┛╹╹ ╹╺┻┛┗━┛│\n# └──────────────────────┘\n\n# fish function for user key bindings -> u can goto the files in the function calls\nfunction fish_user_key_bindings\n    #bind \" \" expand-abbr or self-insert\n    bind \\t 'expand_abbr_or_tab_complete'\n    bind \\cA 'beginning-of-buffer'\n    bind \\cE 'accept-autosuggestion-or-end-of-buffer'\n    bind \\cH 'backward-kill-word' \n    bind \\cW 'suppress-autosuggestion-and-backward-kill-bigword'\n    bind \\e\\[A 'page-up-or-history-backward' \n    bind \\e\\[B 'page-down-or-history-forward'\n    bind \\cd 'exit-or-smart-clear'\n    bind \\cc 'toggle-comment-or-cancel-command'\n    bind \\cj 'down-or-nextd-or-forward-word'\n    bind \\ck 'up-or-prevd-or-backward-word'\n    bind \\cr 'ranger; commandline -f repaint'\n    #bind \\ct 'commandline -f repaint'\n    bind -k nul 'fzf-or-toggle-auto-complete;commandline -f repaint' \n    bind \\cv 'fish_clipboard_paste'\n    bind \\cS 'toggle_prompt; commandline -f repaint'\n    bind \\cG 'lazygit; commandline -f repaint'\n    bind \\cB 'bt-fzf-grep; commandline -f repaint'\n    bind \\e\\cN 'open_term_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cT 'open_terminal_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cR '$EXE/open_term_run_ranger.sh $PWD'\n    bind \\cT 'open_terminal_and_copy_dir_history'\n    bind \\cOw 'open_location 1'\n    bind \\cOp 'open_location 1'\n    bind \\cOn 'open_location 2'\n    bind \\cOf 'open_location 3'\n    bind \\cOe 'open_location 4'\n    bind \\cO1 'open_location 1'\n    bind \\cO2 'open_location 2'\n    bind \\cO3 'open_location 3'\n    bind \\cO4 'open_location 4'\n    bind \\eow 'gt; commandline -f repaint'\n    bind \\eop 'gt repos; commandline -f repaint'\n    bind \\eon 'gt n; commandline -f repaint'\n    bind \\eof 'gt f; commandline -f repaint'\n    bind \\eoc 'gt config; commandline -f repaint'\n    bind \\eor 'gt r; commandline -f repaint'\n    bind ~~~ 'tmux -2; commandline -f repaint;'\n    bind \\cY 'fzf-history-or-copy-to-clipboard'\n    bind \\ey 'select_from_last'\n    bind \\ez 'fzf-search; commandline -f repaint'\n    bind \\c_ 'backward-jump' # ctrl + /\n    bind \\cF 'fzf-recent-dirs; commandline -f repaint'\n    bind \\ef 'forward-jump'\n    bind \\e\\; 'repeat-jump'\n    bind \\e\\, 'repeat-jump-reverse'\n    bind \\eo 'insert-line-under'\n    #bind \\c\\; 'repeat-jump'\n    #bind \\cT 'fzf-search;commandline -f repaint'\n    bind \\eu 'undo' # DNE on ergodox layout\n    bind \\er 'redo'\n    bind \\em '__fish_man_page'\n    bind \\eg 'commandline -r \"gt \"; commandline -f repaint; commandline -f complete';\nend\n\n# ┌────────────┐\n# │┏━┓┏┓ ┏┓ ┏━┓│\n# │┣━┫┣┻┓┣┻┓┣┳┛│\n# │╹ ╹┗━┛┗━┛╹┗╸│\n# └────────────┘\nset -g test_var true # set test_var equal to something then run tvif abbr\n\n# ┌─────────────────┐\n# │ system commands │\n# └─────────────────┘\nset -a -g rmf 'rm -f'\nset -a -g rmr 'rm -rf'\nset -a -g mkdir 'mkdir -p'\nabbr -a -g apt 'sudo apt'\nabbr -a -g aptg 'sudo apt-get'\nabbr -a -g apti 'sudo apt install'\nabbr -a -g apts 'apt search'\nabbr -a -g apty 'sudo apt install -y'\n\nabbr -a -g tvif 'if test $test_var; echi 1; else; echi 0; end;'\n\n# ┌────────┐\n# │ github │\n# └────────┘\nabbr -a -g readme 'nvim README.md'\nabbr -a -g clog 'nvim CHANGELOG.md'\nabbr -a -g gwa 'git worktree add'\nabbr -a -g rdme 'nvim README.md'\nabbr -a -g ignr 'nvim .gitignore'\nabbr -a -g gti 'nvim .gitignore'\n\n# ┌────────┐\n# │ cutsom │\n# └────────┘\nabbr -a -g nvimff \"nvim -O $HOME/.config/fish/{functions,completions}/\"\nabbr -a -g gacc \"git@github.com:ndonfris/SOMEREPO.git\"\nabbr -a -g fish_path \"$HOME/.config/fish\"\nabbr -a -g nvim_path \"$HOME/.config/nvim\"\nabbr -a -g fz \"fzf-\"\nabbr -a -g fzs \"bt-fzf-switch\"\nabbr -a -g fzt \"bt-fzf-grep\"\nabbr -a -g fzff \"ls $HOME/.config/fish/functions | grep \\\"fzf\\\"\"\nabbr -a -g tm \"tmux -2\"\nabbr -a -g sf \"source_fish -q;\"\nabbr -a -g ech \"echi\"\nabbr -a -g echy \"echi y;\"\nabbr -a -g echn \"echi n;\"\nabbr -a -g echf \"echi f;\"\nabbr -a -g echm \"echi m;\"\nabbr -a -g ya \"echi y\"\nabbr -a -g no \"echi n\"\nabbr -a -g fff \"fzf-search\"\nabbr -a -g lsg '(ls . | grep \"*\")'\nabbr -a -g grepf '(ls . | grep \"*\")'\nabbr -a -g fdn 'set -l var \"\"; nvim (lso -t | fd \"$var\" | grep \"$var\" | head -n 5)'\nabbr -a -g fd_n 'nvim (lso -t | grep \"*\")'\nabbr -a -g fds 'set -l var \"\"; lso -t | fd \"$var\" | grep \"$var\" | head -n 5'\nabbr -a -g fd_s 'lso -t | grep \"*\"'\nabbr -a -g ls_start 'lso -t | grep -e \"^\\(word\\)\\.*\"'\nabbr -a -g ls_end 'lso -t | grep  -e \"\\(word\\)\\$\"'\nabbr -a -g ls_not 'lso -t | grep --invert-match -e \"\\(word\\)\"'\n\nabbr -a -g ls_recent \"lso -t | head -n 10\"\n\nabbr -a -g no_stderr '$history[1] 2>/dev/null'\nabbr -a -g no_stdout '$history[1] 1>/dev/null'\n\nabbr -a -g h10 'head -n 10'\nabbr -a -g t10 'tail -n 10'\n\nabbr -a -g ls_full 'realpath (lso -t | grep --exclude-dir \"**/node_modules\" -e \"\\(SEARCH\\)\")'\n#abbr -a -g ff 'nvim (fd --type f)'\nabbr -a -g gtree 'git worktree'\nabbr -a -g gw 'git worktree'\nabbr -a -g gc-b 'git clone --bare'\n\nabbr -a -g cpff 'cp -r $HOME/.config/fish/functions/ '\n\nabbr -a -g nn 'nvim $HOME/.config/nvim/'\nabbr -a -g nl 'nvim lua/user/'\nabbr -a -g nlu 'nvim lua/user/'\nabbr -a -g nlc 'nvim lua/completion/'\nabbr -a -g np 'nvim plug-config/'\nabbr -a -g npp 'nvim vim-plug/plugins.vim'\nabbr -a -g na 'nvim autoload/plugged/'\n\n# ┌───────────┐\n# │ tmux abbr │\n# └───────────┘\nabbr -a -g tns \"tmux-new-session\"\nabbr -a -g tmuxs \"fzf-tmux-search\"\n\nabbr -a -g in_neovim_statement 'if set -q $NVIM; echi y;else;echi n;end'\n\n# ┌─────────────────────────┐\n# │ multiline abbreviations │\n# └─────────────────────────┘\n#abbr -a -g qwhile 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qread 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qif 'set -l var (echo \"\" ); \\\n#if test \"$var\" = \"_\";\\\n#echi yes;\\\n#else; \\\n#echi no;\\\n#end;'\n\nabbr -a -g fft 'firefox_tab'\n\nabbr -a -g gr 'gt r'\nabbr -a -g rr 'gt r'\n\nabbr -a -g lss 'ls -l --sort=size'\nabbr -a -g conf 'cd ~/.config/'\nabbr -a -g npmw 'npm run watch'\nabbr -a -g npmr 'npm run'\nabbr -a -g home 'cd $HOME'\n\nset -gx fish_tmux_autostart false\nset -gx fish_tmux_autostart_once true\nset -gx fish_tmux_autoconnect false\n\nset -gx open_in_working_dir_file $HOME/.open_in_working_dir_file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/config.fish
opened document: file:///home/ndonfris/.config/fish/config.fish
analyzed document: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
server.onComplete
onComplete: /home/ndonfris/.config/fish/config.fish : set -gx tsplayground "$HOME/
root: (program (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word))))) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (comment) (pipe (command name: (word) argument: (word) argument: (word)) (command name: (word))) (command name: (word) argument: (concatenation (home_dir_expansion) (word))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word)) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (comment) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (comment) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (concatenation (word) (double_quote_string))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (variable_expansion (variable_name))) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word) argument: (word) argument: (word))))) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word) argument: (word) argument: (word))))) (command name: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (word) (single_quote_string))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (comment) (command name: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)))) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (comment) (command name: (word) argument: (concatenation (word) (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name))))) (command name: (word) argument: (concatenation (word) (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name))))) (command name: (word) argument: (concatenation (word) (double_quote_string (variable_expansion (variable_name))))) (command name: (word) argument: (concatenation (word) (single_quote_string))) (comment) (comment) (comment) (if_statement condition: (test_command argument: (double_quote_string (variable_expansion (variable_name))) argument: (test_option) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (command_substitution (command_substitution_fish (command name: (word)))))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (variable_expansion (variable_name))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (word)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (home_dir_expansion) (word))) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)) (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (comment) (comment) (comment) (comment) (comment) (comment) (function_definition name: (word) (comment) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (comment) (command name: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (integer)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (home_dir_expansion) (home_dir_expansion) (home_dir_expansion)) argument: (single_quote_string)) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (comment) (command name: (word) argument: (escape_sequence) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (escape_sequence)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (comment) (comment) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (comment) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string)) (command name: (word) argument: (concatenation (escape_sequence) (word)) argument: (single_quote_string))) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word)) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string (variable_expansion (variable_name)) (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence))) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string (escape_sequence) (escape_sequence))) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (double_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word) argument: (single_quote_string)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (word)) (command name: (word) argument: (word) argument: (word) argument: (concatenation (variable_expansion (variable_name)) (word))))
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/config.fish
closed uri: /home/ndonfris/.config/fish/config.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/codi.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function codi --description \"codi [filetype] [filename]\" --argument-names filetype filename\n    $scripts/codi.sh $filetype $filename\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/codi.fish
opened document: file:///home/ndonfris/.config/fish/functions/codi.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
closed uri: /home/ndonfris/.config/fish/functions/codi.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/codi.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function codi --description \"codi [filetype] [filename]\" --argument-names filename\n    nice -n -20 \"nvim $filename --cmd 'Codi'\"\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/codi.fish
opened document: file:///home/ndonfris/.config/fish/functions/codi.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
closed uri: /home/ndonfris/.config/fish/functions/codi.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/codi.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function codi --description \"codi [filetype] [filename]\" --argument-names filename\n    nice -n -20 \"nvim $filename -c 'Codi'\"\nend\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/codi.fish
opened document: file:///home/ndonfris/.config/fish/functions/codi.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
closed uri: /home/ndonfris/.config/fish/functions/codi.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/codi.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onHover
onHover
onDefinition
__test_small
onReference
onReference
onDefinition
__test_small
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 35)
onDocumentFormatting: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n    set variable_name \"value asdf\"\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onDocumentSymbols
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
onCodeAction: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onCodeAction.range
position (character: 0, line: 0)
position (character: 0, line: 34)
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/config.fish",
      "languageId": "fish",
      "version": 1,
      "text": "\n# ┌──────────┐\n# │┏━╸╻┏━┓╻ ╻│\n# │┣╸ ┃┗━┓┣━┫│\n# │╹  ╹┗━┛╹ ╹│\n# └──────────┘\n\nset -gx OS_NAME (get-os-name) # check for mac or linux\n\n# ┌──────────┐\n# │ defaults │\n# └──────────┘\nset -gx TERM \"xterm-256color\"\nset -gx SCRIPTS \"$HOME/.config/fish/scripts\"\nset -gx EXE \"$HOME/.config/fish/scripts\"\n#set -gx TERMINAL 'terminator'\n#set -gx TERMINAL 'gnome-terminal'\nset -gx TERMINAL 'tilix'\nset -gx COLOR_TERM \"truecolor\"\nset -gx EDITOR 'nvim'\nset -gx VISUAL 'nvim'\nset -gx NVIM_RANGER_FILE \"$HOME/.config/nvim/nvim_ranger_file\"\nset -gx NODE_MODULES_PATH '/usr/local/lib/node_modules/'\n\n## short_hands for locations\nset -gx funcs \"$HOME/.config/fish/functions\"\nset -gx nlua \"$HOME/.config/nvim/lua\"\nset -gx nconf \"$HOME/.config/nvim\"\nset -gx comps \"$HOME/.config/fish/completions\"\nset -gx scripts \"$HOME/.config/fish/scripts\"\nset -gx theme \"$HOME/.config/nvim/themes/onetheme.vim\"\nset -gx tsplayground \"$HOME/repos/ts-scratch-pad\"\nset -gx repos \"$HOME/repos\"\n\n# ┌────────┐\n# │ prompt │\n# └────────┘\noh-my-posh init fish | source\nsource ~/.local/share/icons-in-terminal/icons.fish\n\nset -gx prompt_size_file \"$FISH_PATH/fish_prompt_is_long\"\nset_first_prompt_size;\n\n# ┌─────────────┐\n# │┏━┓╻  ╻┏━┓┏━┓│\n# │┣━┫┃  ┃┣━┫┗━┓│\n# │╹ ╹┗━╸╹╹ ╹┗━┛│\n# └─────────────┘\nalias lt=\"ls --tree\"\nalias lst=\"ls --tree\"\nalias sl=\"sl -l -e -F\"\nalias cs=\"sl -l -e -F\"\nalias cmatrix=\"unimatrix -l nnnnkkgGcAas -n -s 97 -f --color=yellow\"\nalias cbon=\"cbonsai --multiplier=3 --life=45 --live\"\nalias vimdiff=\"nvim -d\"\nalias vdiff=\"nvim -d\"\nalias vd=\"nvim -d\"\n#alias neovide=\"neovide --multigrid\"\nalias gitqc='git add . && git commit -m \"added minor changes\" && git push ' \nalias gcan='git commit --amend --no-edit'\nalias nvim_norc='nvim -U norc'\nalias nvim_search='nvim -c \":FZFAll\"'\nalias prompt_fix='commandline -f repaint'\n#alias cat='batcat'\nalias lg='lazygit'\nalias f='floaterm'\nalias fmui=\"~/fmui/fmui\"\n\n# ┌─────────────────────┐\n# │┏━╸╻ ╻┏━┓┏━┓┏━┓╺┳╸┏━┓│\n# │┣╸ ┏╋┛┣━┛┃ ┃┣┳┛ ┃ ┗━┓│\n# │┗━╸╹ ╹╹  ┗━┛╹┗╸ ╹ ┗━┛│\n# └─────────────────────┘\n\n# ┌───────┐\n# │ paths │\n# └───────┘\nset -x PATH /home/ndonfris/.local/bin /usr/local/bin /usr/bin /usr/sbin /home/ndonfris/.cargo/env /usr/share/dasht/bin $PATH\nset -gx GOPATH $HOME/go\nset -gx FISH_PATH \"$HOME/.config/fish\"\nset -gx NVIM_PATH \"$HOME/.config/nvim\"\nset -gx DIR_MUSIC $HOME/Music\nset -gx XDG_CONFIG_HOME /home/ndonfris/.config\nset -gx ff $HOME/.config/fish/functions/\n\n\n# ┌───────┐\n# │ theme │\n# └───────┘\nset -gx LS_COLORS (vivid generate ls_theme)\nset -gx EXA_COLORS (vivid generate exa_theme)\nset fish_cursor_unknown block\nset fish_pager_color_description blue\nset fish_color_search_match blue\nset -gx BAT_PAGER \"less -RF\"\nset -gx BAT_THEME \"base16\"\nset -gx fish_pager_color_prefix '#815bf5' --bold\nset -gx fish_pager_color_completion '#685abc'\nset -gx fish_pager_color_secondary_prefix '#685abc'\nset -gx fish_pager_color_secondary_completion '#685abc'\nset -gx fish_pager_color_secondary_descrition '#685abc'\nset -gx fish_pager_color_selected_prefix white\nset -gx fish_pager_color_selected_completion white \nset -gx fish_pager_color_selected_description white\nset -gx fish_pager_color_selected_background --background='#685abc'\nset -gx DASHT_DOCSETS_DIR \"$HOME/.local/share/Zeal/Zeal/docsets\"\n\n\n# ┌──────┐\n# │ ENV  │\n# └──────┘\nload_env_vars $NVIM_PATH/.openai_key\n\n\n# ┌──────┐\n# │ TMUX │\n# └──────┘\nset -gx pref_tmux_session_names 'expo' 'fish' 'nvim' 'work' 'nvim-lua' '445' 'leetcode' 'temp' 'working' 'main' 'master' 'backend' 'frontend' 'project' 'git' 'tmp' 'default' 'other' 'source' 'hw' 'new'\nset -gx tmux_conf $HOME/.tmux.conf\nset -gx tmux_dir $HOME/.config/tmux/\n\n\n# ┌─────┐\n# │ FZF │\n# └─────┘\n# alias's for fzf so that default formatting is always availible\nset -gx _FZF_COLORS \"--color='fg:#7ba2f3,bg:-1,hl:#5f87af,fg+:#15a9bf,bg+:#414868,hl+:#5fd7ff,info:#c0caf5,prompt:#685abc,pointer:#af5fff,marker:#685abc,spinner:#af5fff,header:#797fda,border:#5fd7ff,gutter:-1'\"\nset -gx _FZF_PREVIEW \"--preview='_fzf_preview {}'\"\nset -gx _FZF_WINDOW \"--ansi --height 75% --min-height 30  --margin 5% --padding 1% --border=rounded --reverse\"\nset -gx _FZF_TMUX_WINDOW \"--ansi --reverse\"\nset -gx _FZF_NAV_KEYS \"--bind=ctrl-u:page-up,ctrl-d:page-down,ctrl-h:backward-kill-word,tab:replace-query,down:preview-page-down,up:preview-page-up,change:top\"\nset -gx _FZF_CMD_KEYS \"--bind='ctrl-g:reload(_fzf_subcommand_git_status),ctrl-r:reload(history),ctrl-f:reload(find_child_files),alt-d:reload(_fzf_search_directory),alt-g:reload(_fzf_search_git_log),ctrl-o:reload(list_parents),ctrl-l:execute(fd . --type f),?:reload(fzf_subcommand_man)'\"\nset -gx _FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_WINDOW $_FZF_PREVIEW $_FZF_NAV_KEYS $_FZF_CMD_KEYS\"\n\n# fzf aliases\nset -gx FZF_DEFAULT_OPTS \"$_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS\"\nset -gx FZF_DEFAULT_COMMAND \"all_finder\";\n#set -U FZF_LEGACY_KEYBINDINGS 1\nalias fzf_mini=\"fzf $_FZF_COLORS $_FZF_TMUX_WINDOW $_FZF_NAV_KEYS $_FZF_PREVIEW --preview-window='down,65%,rounded'\"\nalias fzf_min=\"/usr/bin/fzf $_FZF_COLORS $_FZF_WINDOW $_FZF_NAV_KEYS\"\nalias fzf_mine=\"fzf $_FZF_DEFAULT_OPTS\"\nalias fzf_gt='__fzf_open_mine'\n\n# ┌──────┐\n# │ Man  │\n# └──────┘\nif test \"$MANPATH\" = \"\";\n    set -gx MANPATH (manpath)\nend\nset -gx MANPATH /usr/share/fish/man /usr/share/dasht/man $MANPATH\nset -g man_blink -o magenta\nset -g man_bold -o blue \nset -g man_standout -b blue --bold white\nset -g man_underline -u white\n\n# ┌──────┐\n# │ JAVA │\n# └──────┘\nset -gx JAVA_HOME /usr/lib/jvm/zulu-18-amd64\nset -gx PATH_TO_FX ~/Downloads/javafx-sdk-17.0.1/lib\n\n\n# ┌──────────────────────────┐\n# │ ranger fzf marks plugins │\n# └──────────────────────────┘\nset -gx _fzf_fzm_defaults \"--ansi --margin 5% --padding 1% --border=rounded --reverse --height 95% --min-height 30 --cycle +m\"\nset -gx _fzf_fzm_preview_window \"--with-nth -1 --preview='exa --icons /home/ndonfris/{3}' --preview-window=right:25%\"\nset -gx FZF_FZM_OPTS \"$_fzf_fzm_defaults $_fzf_fzm_preview_window $_FZF_COLORS $_FZF_NAV_KEYS\"\nset -gx FZF_MARKS_CMD \"/usr/bin/fzf $FZF_FZM_OPTS\"\n\n# ┌──────────────────────┐\n# │╻┏ ┏━╸╻ ╻┏┓ ╻┏┓╻╺┳┓┏━┓│\n# │┣┻┓┣╸ ┗┳┛┣┻┓┃┃┗┫ ┃┃┗━┓│\n# │╹ ╹┗━╸ ╹ ┗━┛╹╹ ╹╺┻┛┗━┛│\n# └──────────────────────┘\n\n# fish function for user key bindings -> u can goto the files in the function calls\nfunction fish_user_key_bindings\n    #bind \" \" expand-abbr or self-insert\n    bind \\t 'expand_abbr_or_tab_complete'\n    bind \\cA 'beginning-of-buffer'\n    bind \\cE 'accept-autosuggestion-or-end-of-buffer'\n    bind \\cH 'backward-kill-word' \n    bind \\cW 'suppress-autosuggestion-and-backward-kill-bigword'\n    bind \\e\\[A 'page-up-or-history-backward' \n    bind \\e\\[B 'page-down-or-history-forward'\n    bind \\cd 'exit-or-smart-clear'\n    bind \\cc 'toggle-comment-or-cancel-command'\n    bind \\cj 'down-or-nextd-or-forward-word'\n    bind \\ck 'up-or-prevd-or-backward-word'\n    bind \\cr 'ranger; commandline -f repaint'\n    #bind \\ct 'commandline -f repaint'\n    bind -k nul 'fzf-or-toggle-auto-complete;commandline -f repaint' \n    bind \\cv 'fish_clipboard_paste'\n    bind \\cS 'toggle_prompt; commandline -f repaint'\n    bind \\cG 'lazygit; commandline -f repaint'\n    bind \\cB 'bt-fzf-grep; commandline -f repaint'\n    bind \\e\\cN 'open_term_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cT 'open_terminal_and_copy_dir_history && xdotool key \"super+n\"'\n    bind \\e\\cR '$EXE/open_term_run_ranger.sh $PWD'\n    bind \\cT 'open_terminal_and_copy_dir_history'\n    bind \\cOw 'open_location 1'\n    bind \\cOp 'open_location 1'\n    bind \\cOn 'open_location 2'\n    bind \\cOf 'open_location 3'\n    bind \\cOe 'open_location 4'\n    bind \\cO1 'open_location 1'\n    bind \\cO2 'open_location 2'\n    bind \\cO3 'open_location 3'\n    bind \\cO4 'open_location 4'\n    bind \\eow 'gt; commandline -f repaint'\n    bind \\eop 'gt repos; commandline -f repaint'\n    bind \\eon 'gt n; commandline -f repaint'\n    bind \\eof 'gt f; commandline -f repaint'\n    bind \\eoc 'gt config; commandline -f repaint'\n    bind \\eor 'gt r; commandline -f repaint'\n    bind ~~~ 'tmux -2; commandline -f repaint;'\n    bind \\cY 'fzf-history-or-copy-to-clipboard'\n    bind \\ey 'select_from_last'\n    bind \\ez 'fzf-search; commandline -f repaint'\n    bind \\c_ 'backward-jump' # ctrl + /\n    bind \\cF 'fzf-recent-dirs; commandline -f repaint'\n    bind \\ef 'forward-jump'\n    bind \\e\\; 'repeat-jump'\n    bind \\e\\, 'repeat-jump-reverse'\n    bind \\eo 'insert-line-under'\n    #bind \\c\\; 'repeat-jump'\n    #bind \\cT 'fzf-search;commandline -f repaint'\n    bind \\eu 'undo' # DNE on ergodox layout\n    bind \\er 'redo'\n    bind \\em '__fish_man_page'\n    bind \\eg 'commandline -r \"gt \"; commandline -f repaint; commandline -f complete';\nend\n\n# ┌────────────┐\n# │┏━┓┏┓ ┏┓ ┏━┓│\n# │┣━┫┣┻┓┣┻┓┣┳┛│\n# │╹ ╹┗━┛┗━┛╹┗╸│\n# └────────────┘\nset -g test_var true # set test_var equal to something then run tvif abbr\n\n# ┌─────────────────┐\n# │ system commands │\n# └─────────────────┘\nset -a -g rmf 'rm -f'\nset -a -g rmr 'rm -rf'\nset -a -g mkdir 'mkdir -p'\nabbr -a -g apt 'sudo apt'\nabbr -a -g aptg 'sudo apt-get'\nabbr -a -g apti 'sudo apt install'\nabbr -a -g apts 'apt search'\nabbr -a -g apty 'sudo apt install -y'\n\nabbr -a -g tvif 'if test $test_var; echi 1; else; echi 0; end;'\n\n# ┌────────┐\n# │ github │\n# └────────┘\nabbr -a -g readme 'nvim README.md'\nabbr -a -g clog 'nvim CHANGELOG.md'\nabbr -a -g gwa 'git worktree add'\nabbr -a -g rdme 'nvim README.md'\nabbr -a -g ignr 'nvim .gitignore'\nabbr -a -g gti 'nvim .gitignore'\n\n# ┌────────┐\n# │ cutsom │\n# └────────┘\nabbr -a -g nvimff \"nvim -O $HOME/.config/fish/{functions,completions}/\"\nabbr -a -g gacc \"git@github.com:ndonfris/SOMEREPO.git\"\nabbr -a -g fish_path \"$HOME/.config/fish\"\nabbr -a -g nvim_path \"$HOME/.config/nvim\"\nabbr -a -g fz \"fzf-\"\nabbr -a -g fzs \"bt-fzf-switch\"\nabbr -a -g fzt \"bt-fzf-grep\"\nabbr -a -g fzff \"ls $HOME/.config/fish/functions | grep \\\"fzf\\\"\"\nabbr -a -g tm \"tmux -2\"\nabbr -a -g sf \"source_fish -q;\"\nabbr -a -g ech \"echi\"\nabbr -a -g echy \"echi y;\"\nabbr -a -g echn \"echi n;\"\nabbr -a -g echf \"echi f;\"\nabbr -a -g echm \"echi m;\"\nabbr -a -g ya \"echi y\"\nabbr -a -g no \"echi n\"\nabbr -a -g fff \"fzf-search\"\nabbr -a -g lsg '(ls . | grep \"*\")'\nabbr -a -g grepf '(ls . | grep \"*\")'\nabbr -a -g fdn 'set -l var \"\"; nvim (lso -t | fd \"$var\" | grep \"$var\" | head -n 5)'\nabbr -a -g fd_n 'nvim (lso -t | grep \"*\")'\nabbr -a -g fds 'set -l var \"\"; lso -t | fd \"$var\" | grep \"$var\" | head -n 5'\nabbr -a -g fd_s 'lso -t | grep \"*\"'\nabbr -a -g ls_start 'lso -t | grep -e \"^\\(word\\)\\.*\"'\nabbr -a -g ls_end 'lso -t | grep  -e \"\\(word\\)\\$\"'\nabbr -a -g ls_not 'lso -t | grep --invert-match -e \"\\(word\\)\"'\n\nabbr -a -g ls_recent \"lso -t | head -n 10\"\n\nabbr -a -g no_stderr '$history[1] 2>/dev/null'\nabbr -a -g no_stdout '$history[1] 1>/dev/null'\n\nabbr -a -g h10 'head -n 10'\nabbr -a -g t10 'tail -n 10'\n\nabbr -a -g ls_full 'realpath (lso -t | grep --exclude-dir \"**/node_modules\" -e \"\\(SEARCH\\)\")'\n#abbr -a -g ff 'nvim (fd --type f)'\nabbr -a -g gtree 'git worktree'\nabbr -a -g gw 'git worktree'\nabbr -a -g gc-b 'git clone --bare'\n\nabbr -a -g cpff 'cp -r $HOME/.config/fish/functions/ '\n\nabbr -a -g nn 'nvim $HOME/.config/nvim/'\nabbr -a -g nl 'nvim lua/user/'\nabbr -a -g nlu 'nvim lua/user/'\nabbr -a -g nlc 'nvim lua/completion/'\nabbr -a -g np 'nvim plug-config/'\nabbr -a -g npp 'nvim vim-plug/plugins.vim'\nabbr -a -g na 'nvim autoload/plugged/'\n\n# ┌───────────┐\n# │ tmux abbr │\n# └───────────┘\nabbr -a -g tns \"tmux-new-session\"\nabbr -a -g tmuxs \"fzf-tmux-search\"\n\nabbr -a -g in_neovim_statement 'if set -q $NVIM; echi y;else;echi n;end'\n\n# ┌─────────────────────────┐\n# │ multiline abbreviations │\n# └─────────────────────────┘\n#abbr -a -g qwhile 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qread 'while true;  read -t -l var -P \"(q to quit) var > \"; \\\n#switch \"$var\"; \\\n#case q Q; \\\n#break; \\\n#case \\*; \\\n#echo \"$var\"; \\\n#continue; \\\n#end;end;'\n#\n#abbr -a -g qif 'set -l var (echo \"\" ); \\\n#if test \"$var\" = \"_\";\\\n#echi yes;\\\n#else; \\\n#echi no;\\\n#end;'\n\nabbr -a -g fft 'firefox_tab'\n\nabbr -a -g gr 'gt r'\nabbr -a -g rr 'gt r'\n\nabbr -a -g lss 'ls -l --sort=size'\nabbr -a -g conf 'cd ~/.config/'\nabbr -a -g npmw 'npm run watch'\nabbr -a -g npmr 'npm run'\nabbr -a -g home 'cd $HOME'\n\nset -gx fish_tmux_autostart false\nset -gx fish_tmux_autostart_once true\nset -gx fish_tmux_autoconnect false\n\nset -gx open_in_working_dir_file $HOME/.open_in_working_dir_file\n\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/config.fish
opened document: file:///home/ndonfris/.config/fish/config.fish
analyzed document: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidChangeTextDocument]: file:///home/ndonfris/.config/fish/config.fish
onDocumentSymbols
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidSaveTextDocument]: file:///home/ndonfris/.config/fish/config.fish
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/config.fish
closed uri: /home/ndonfris/.config/fish/config.fish