Fri Jan  6 04:08:41 AM CST 2023

[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: connection.onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: _fish.hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
executeCommand: _fish.hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: _fish.hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: _fish.hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: workspace/onDefinition
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onHover
executeCommand: hover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onDocumentSymbols
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onDocumentSymbols
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onDocumentSymbols
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onDocumentSymbols
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onDocumentSymbols
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onDocumentSymbols
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onDocumentSymbols
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
onHover
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
executeCommand: onHover
[object Object]
arg_0: {"textDocument":{"uri":"file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish"},"position":{"line":34,"character":0}}
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onHover
onHover
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onHover
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onHover
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onHover
onHover
onHover
onHover
onDefinition
variable_name
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
[FishLsp.onDidOpenTextDocument()]
{
  "params": {
    "textDocument": {
      "uri": "file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish",
      "languageId": "fish",
      "version": 1,
      "text": "function test_fish_lsp --argument-names file --description \"Check a file for syntax errors\"\n    echo \"$file\"\n    lso\n    fzf-local-node_modules\nend\n\n## this is a comment\nfunction __test_small\n    if string match --regex '^(\\w{10}).fish' -- \"$argv\"\n        echo matched | string pad -c ' '\n    end\n    string match --regex '[[:alnum:]]' \"$argv\"\n\n    # padding a stirng\n    string pad --char \" \" \"$argv\"\n    set_color --background black white\n    set -l variable_name \"v a\"\n    whatis -? --config-file --help --regex \"*\"\n    set -l variable_name (string split0 --fields 1 --right --max 4 '\\t' \"$argv\")\n    string pad --width 10 --char \" \" \"$argv\"\n    set -l variable_name \"value u\"\n    if test -n \"$variable_name\"\n        echo \"$variable_name is not empty\"\n    end\n\n    for i in $variable_name\n        echo $i\n    end\n\n\nend\n\nset -l file \"$argv\"\ntest_fish_lsp $file\n"
    }
  }
}
[FishLsp.onDidOpenTextDocument()] uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish
opened document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
analyzed document: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
onDocumentSymbols
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onDefinition
test_fish_lsp
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onHover
onDefinition
variable_name
onDefinition
pad
onHover
onDefinition
match
onHover
onHover
onHover
onHover
onHover
[onDidCloseTextDocument]: file:///home/ndonfris/.config/fish/functions/test-fish-lsp.fish
closed uri: /home/ndonfris/.config/fish/functions/test-fish-lsp.fish